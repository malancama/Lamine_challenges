## üíª Challenges 03

#1. Concat√©nez les cha√Ænes de caract√®res 'Thirty', 'Days', 'Of', 'Python' en une seule cha√Æne, 'Thirty Days Of Python'.
chaine = 'Thirty ' + 'Days ' + 'Of ' + 'Python' # 


#2. Concat√©nez les cha√Ænes de caract√®res 'Coding', 'For' , 'All' en une seule cha√Æne, 'Coding For All'.
C_coding='Coding ' + 'For ' + 'All'


#3. D√©clarez une variable nomm√©e company et assignez-lui la valeur initiale "Coding For All".
company='Coding For All' # cr√©e la variable company et lui assigne la valeur "Coding For All"

#4. Imprimez la variable company en utilisant _print()_.
print(company) # affiche la variable company

#5. Imprimez la longueur de la cha√Æne company en utilisant la m√©thode _len()_ et _print()_.
print(len(company)) # affiche la longueur de la variable company

#6. Changez tous les caract√®res en majuscules en utilisant la m√©thode _upper()_.
Mj_company=company.upper() # cr√©e une variable Mj_company et lui assigne methode qui transforme les caract√®res de la variable company en majuscules.

#7. Changez tous les caract√®res en minuscules en utilisant la m√©thode _lower()_.
Mi_company= company.lower() # cr√©e une variable Mi_company et lui assigne methode qui transforme les caract√®res de la variable company en miniscules.

#8. Utilisez les m√©thodes capitalize(), title(), swapcase() pour formater la valeur de la cha√Æne _Coding For All_.
 # cr√©e une variable chaine_C et lui assigne la valeur "Coding For All"
"Coding For All".capitalize() # methode qui transforme le 1er caract√®re de chaine_C en majuscule.
"Coding For All".title() # methode qui transforme le 1er caract√®re de chaque mot de chaine_C en majuscule. 
"Coding For All".swapcase() # methode qui inverse la case : faire le contraire d'une methode precedente.

#9. Coupez (slice) le premier mot de la cha√Æne _Coding For All_.
 # cr√©e une variable qui stock la chaine de caract√®re _Coding For All_
"Coding For All"[:6] # affiche le premier mot de la chaine _Coding For All_.

#10. V√©rifiez si la cha√Æne _Coding For All_ contient le mot Coding en utilisant les m√©thodes index, find ou autres m√©thodes.
"Coding For All ".find('Coding') # verifie si la chaine contient le mot _Coding_.
"Coding For All".index('Coding') # verifie et affiche si la chaine contient le mot _Coding_.

#11. Remplacez le mot coding dans la cha√Æne 'Coding For All' par Python.
"Coding For All".replace("Coding","Python" ) # remplace et affiche le mot coding dans la variable chaine_D par python 

#12. Changez Python for Everyone en Python for All en utilisant la m√©thode replace ou d'autres m√©thodes.
"Python for Everyone".replace("Everyone", "All") # remplace et affiche le mot _Everyone_ dans la chaine par _All_ 

#13. Divisez la cha√Æne 'Coding For All' en utilisant l'espace comme s√©parateur (split()).
"Coding For All".split(" ") 

#14. "Facebook, Google, Microsoft, Apple, IBM, Oracle, Amazon" divisez la cha√Æne au niveau de la virgule.
"Facebook, Google, Microsoft, Apple, IBM".split(",") 

#15. Quel est le caract√®re √† l'index 0 dans la cha√Æne _Coding For All_.
"Coding For All"[0] 

#16. Quel est le dernier index de la cha√Æne _Coding For All_.
"Coding For All"[-1] # affiche 

#17. Quel caract√®re se trouve √† l'index 10 dans la cha√Æne "Coding For All".
"Coding For All"[10] 

#18. Cr√©ez un acronyme ou une abr√©viation pour le nom 'Python For Everyone'.
acro = [i[0] for i in "Python For Everyone".split(' ')]
''.join(acro)

#19. Cr√©ez un acronyme ou une abr√©viation pour le nom 'Coding For All'.
abv= [n[0] for n in "Coding For All".split(' ')]
''.join(abv)

#20. Utilisez l'index pour d√©terminer la position de la premi√®re occurrence de C dans Coding For All.
"Coding For All".index('C')

#21. Utilisez l'index pour d√©terminer la position de la premi√®re occurrence de F dans Coding For All.
"Coding For All".index('F')

#22. Utilisez rfind pour d√©terminer la position de la derni√®re occurrence de l dans Coding For All People.
"Coding For All People".rfind('l')

#23. Utilisez index ou find pour trouver la position de la premi√®re occurrence du mot 'because' dans la phrase suivante : 'You cannot end a sentence with because because because is a conjunction'.
"You cannot end a sentence with because because because is a conjunction".find('because')

#24. Utilisez rindex pour trouver la position de la derni√®re occurrence du mot because dans la phrase suivante : 'You cannot end a sentence with because because because is a conjunction'.
"You cannot end a sentence with because because because is a conjunction".rindex('because')

#25. Coupez la phrase 'because because because' dans la phrase suivante : 'You cannot end a sentence with because because because is a conjunction'.
coupe = 'You cannot end a sentence with because because because is a conjunction'.split('because')
''.join(coupe)

#26. Trouvez la position de la premi√®re occurrence du mot 'because' dans la phrase suivante : 'You cannot end a sentence with because because because is a conjunction'.
'You cannot end a sentence with because because because is a conjunction'.find('because')

#27. Coupez la phrase 'because because because' dans la phrase suivante : 'You cannot end a sentence with because because because is a conjunction'.
coupe2 = 'You cannot end a sentence with because because because is a conjunction'.split('because')
''.join(coupe2)

#28. La cha√Æne '\'Coding For All' commence-t-elle par une sous-cha√Æne _Coding_ ?
'\'Coding For All'.startswith('Coding')


#29. La cha√Æne 'Coding For All' se termine-t-elle par une sous-cha√Æne _coding_ ?
'Coding For All'.endswith('coding')

#30. '&nbsp;&nbsp; Coding For All &nbsp;&nbsp;&nbsp; &nbsp;' &nbsp;, supprimez les espaces √† gauche et √† droite dans la cha√Æne donn√©e.
'&nbsp;&nbsp; Coding For All &nbsp;&nbsp;&nbsp; &nbsp;'.strip()

#32. La liste suivante contient les noms de certaines biblioth√®ques python : ['Django', 'Flask', 'Bottle', 'Pyramid', 'Falcon']. Joignez la liste avec une cha√Æne de caract√®res hash avec espace.
' '.join(['Django', 'Flask', 'Bottle', 'Pyramid', 'Falcon'])

#33. Utilisez la s√©quence d'√©chappement de nouvelle ligne pour s√©parer les phrases suivantes.
print("I am enjoying this challenge.\nI just wonder what is next.")

'''py
    I am enjoying this challenge.
    I just wonder what is next.
    '''
#34. Utilisez la s√©quence d'√©chappement de tabulation pour √©crire les lignes suivantes.
print('Name\tAge\tCountry\tcity\nAsabeneh\t250\tFinland\tCity')  
'''py
    Name      Age     Country   City
    Asabeneh  250     Finland   Helsinki
'''

#35. Utilisez la m√©thode de formatage de cha√Æne pour afficher ce qui suit :
radius =10
area=3.14 * radius **2
print("The area of a circle with radius {0} is  {1} meters square".format(radius, int(area)))
print(f"The area of a circle with radius {radius} is {area} meters square")
'''sh
radius = 10
area = 3.14 * radius ** 2
The area of a circle with radius 10 is 314 meters square.
'''

#36. R√©alisez ce qui suit en utilisant les m√©thodes de formatage de cha√Æne :

nb1=8 ; nb2= 6
print(f" {nb1} + {nb2} = {nb1 + nb2}")
print(f"{nb1} - {nb2} = {nb1 - nb2}")
print(f"{nb1} * {nb2} = {nb1 * nb2}")
print(f"{nb1} / {nb2} = {(nb1 / nb2):.2f}")
print(f"{nb1} % {nb2} = {nb1 % nb2}")
print(f"{nb1} // {nb2} = {nb1 // nb2}")
print(f"{nb1} ** {nb2} = {nb1 ** nb2}")
'''sh
8 + 6 = 14
8 - 6 = 2
8 * 6 = 48
8 / 6 = 1.33
8 % 6 = 2
8 // 6 = 1
8 ** 6 = 262144
'''
'''
üéâ CONGRATULATIONS ! üéâ
'''
